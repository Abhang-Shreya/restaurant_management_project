import time

class SessionManager:
    def __init__(self, expiry_seconds):
        """
        Initialize the session manager with a given session expiry time (in seconds).
        """
        self.expiry_seconds = expiry_seconds
        self.sessions = {}  # { session_id: creation_timestamp }

    def create_session(self, session_id):
        """
        Create a new session with the current timestamp.
        """
        self.sessions[session_id] = time.time()
        return f"Session '{session_id}' created."

    def is_session_active(self, session_id):
        """
        Check if a session is still active.
        Automatically delete if expired.
        """
        if session_id not in self.sessions:
            return False

        creation_time = self.sessions[session_id]
        current_time = time.time()

        # If session expired, delete it and return False
        if current_time - creation_time > self.expiry_seconds:
            del self.sessions[session_id]
            return False

        return True

    def delete_session(self, session_id):
        """
        Delete a session manually.
        """
        if session_id in self.sessions:
            del self.sessions[session_id]
            return "Deleted"
        else:
            return "Not Found"


# -------- Example usage (for testing) --------
if __name__ == "__main__":
    manager = SessionManager(expiry_seconds=3)

    print(manager.create_session("driver_123"))
    print("Active right away:", manager.is_session_active("driver_123"))

    time.sleep(4)  # Wait to let session expire

    print("Active after 4 sec:", manager.is_session_active("driver_123"))
    print("Delete status:", manager.delete_session("driver_123"))

